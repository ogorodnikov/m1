AWSTemplateFormatVersion: 2010-09-09

Description: M1 API Stack

Resources:

  UserPool:
    Type: AWS::Cognito::UserPool
    Properties:
      AutoVerifiedAttributes:
      - email
  
  UserPoolClient:  
    Type: AWS::Cognito::UserPoolClient
    Properties: 
      ClientName: m1-api-user-pool-client
      UserPoolId: !Ref UserPool
      
  APIGatewayVPCLink:
    Type: AWS::ApiGateway::VpcLink
    Properties: 
      Name: m1-api-vpc-link
      TargetArns: 
      - !ImportValue m1-core-stack:CoreLoadBalancer
      
      
  RESTAPI:
    Type: AWS::ApiGateway::RestApi
    Properties:
      Name: m1-api
      Body: 
        
        swagger: 2.0
        info:
          title: m1-api
        securityDefinitions:
          m1-user-pool-authorizer:
            type: apiKey
            name: Authorization
            in: header
            x-amazon-apigateway-authtype: cognito_user_pools
            x-amazon-apigateway-authorizer:
              type: COGNITO_USER_POOLS
              providerARNs:
              - !Sub arn:aws:cognito-idp:${AWS::Region}:${AWS::AccountId}:userpool/${UserPool}
        
        paths:
        
          /:
          
            get:
            
              responses:
                "200":
                  description: Default response for CORS method
                  headers:
                    Access-Control-Allow-Headers:
                      type: string
                    Access-Control-Allow-Methods:
                      type: string
                    Access-Control-Allow-Origin:
                      type: string
            
              x-amazon-apigateway-integration:
                connectionType: VPC_LINK
                connectionId: !Ref APIGatewayVPCLink
                httpMethod: GET
                type: HTTP_PROXY
                uri: !Join ["", ["http://", !ImportValue m1-core-stack:CoreLoadBalancerDNSName, "/"]]
                responses: 
                  default:
                    statusCode: 200
                    responseParameters:
                      method.response.header.Access-Control-Allow-Headers: "'Content-Type,X-Amz-Date,Authorization,X-Api-Key'"
                      method.response.header.Access-Control-Allow-Methods: "'*'"
                      method.response.header.Access-Control-Allow-Origin: "'*'"


          /m1:
          
            get:
            
              responses:
                "200":
                  description: Default response for CORS method
                  headers:
                    Access-Control-Allow-Headers:
                      type: string
                    Access-Control-Allow-Methods:
                      type: string
                    Access-Control-Allow-Origin:
                      type: string
                      
              x-amazon-apigateway-integration:
                connectionType: VPC_LINK
                connectionId: !Ref APIGatewayVPCLink
                httpMethod: GET
                type: HTTP_PROXY
                uri: !Join ["", ["http://", !ImportValue m1-core-stack:CoreLoadBalancerDNSName, "/m1"]]
                responses: 
                  default:
                    statusCode: 200
                    responseParameters:
                      method.response.header.Access-Control-Allow-Headers: "'Content-Type,X-Amz-Date,Authorization,X-Api-Key'"
                      method.response.header.Access-Control-Allow-Methods: "'*'"
                      method.response.header.Access-Control-Allow-Origin: "'*'"
                      

          /m1/{algorithm-id}:
          
            get:
            
              parameters:
              - name: algorithm-id
                in: path
                required: true
                type: string
              responses:
                "200":
                  description: Default response for CORS method
                  headers:
                    Access-Control-Allow-Headers:
                      type: string
                    Access-Control-Allow-Methods:
                      type: string
                    Access-Control-Allow-Origin:
                      type: string
                      
              x-amazon-apigateway-integration:
                connectionType: VPC_LINK
                connectionId: !Ref APIGatewayVPCLink
                httpMethod: GET
                type: HTTP_PROXY
                uri: !Join ["", ["http://", !ImportValue m1-core-stack:CoreLoadBalancerDNSName, "/m1/{algorithm-id}"]]
                responses: 
                  default:
                    statusCode: 200
                    responseParameters:
                      method.response.header.Access-Control-Allow-Headers: "'Content-Type,X-Amz-Date,Authorization,X-Api-Key'"
                      method.response.header.Access-Control-Allow-Methods: "'*'"
                      method.response.header.Access-Control-Allow-Origin: "'*'"

                requestParameters:
                  integration.request.path.algorithm-id: method.request.path.algorithm-id
                      

          /m1/{algorithm-id}/like:
          
            post:

              parameters:
              - name: algorithm-id
                in: path
                required: true
                type: string
                
              security:
              - m1-user-pool-authorizer: []
                
              responses:
                "200":
                  description: Default response for CORS method
                  headers:
                    Access-Control-Allow-Headers:
                      type: string
                    Access-Control-Allow-Methods:
                      type: string
                    Access-Control-Allow-Origin:
                      type: string
                      
              x-amazon-apigateway-integration:
                connectionType: VPC_LINK
                connectionId: !Ref APIGatewayVPCLink
                httpMethod: GET
                type: HTTP_PROXY
                uri: !Join ["", ["http://", !ImportValue m1-core-stack:CoreLoadBalancerDNSName, "/m1/{algorithm-id}/like"]]
                responses: 
                  default:
                    statusCode: 200
                    responseParameters:
                      method.response.header.Access-Control-Allow-Headers: "'Content-Type,X-Amz-Date,Authorization,X-Api-Key'"
                      method.response.header.Access-Control-Allow-Methods: "'*'"
                      method.response.header.Access-Control-Allow-Origin: "'*'"
                      
                requestParameters:
                  integration.request.path.algorithm-id: method.request.path.algorithm-id
                      
            # options: 
            #   summary: CORS support
            #   description: Enable CORS by returning correct headers
            #   consumes:
            #   - application/json
            #   produces:
            #   - application/json
            #   tags:
            #   - CORS
            #   x-amazon-apigateway-integration:
            #     type: mock
            #     requestTemplates:
            #       application/json: "{\n  \"statusCode\" : 200\n}\n"
            #     responses:
            #       default:
            #         statusCode: 200
            #         responseParameters:
            #           method.response.header.Access-Control-Allow-Headers: "'Content-Type,X-Amz-Date,Authorization,X-Api-Key'"
            #           method.response.header.Access-Control-Allow-Methods: "'*'"
            #           method.response.header.Access-Control-Allow-Origin: "'*'"
            #         responseTemplates:
            #           application/json: "{}\n"
            #   responses:
            #     "200":
            #       description: Default response for CORS method
            #       headers:
            #         Access-Control-Allow-Headers:
            #           type: string
            #         Access-Control-Allow-Methods:
            #           type: string
            #         Access-Control-Allow-Origin:
            #           type: string
                
      EndpointConfiguration: 
        Types: 
        - REGIONAL
      FailOnWarnings: true
      
      
  APIDeployment:
    Type: AWS::ApiGateway::Deployment
    Properties: 
      RestApiId: !Ref RESTAPI
      StageName: m1-api-stage-prod

# Outputs:

#   Test:
#     Description: Test
#     Value: !Join ["", ["http://", !ImportValue m1-core-stack:CoreLoadBalancerDNSName, "/"]]
#     Export:
#       Name: Test